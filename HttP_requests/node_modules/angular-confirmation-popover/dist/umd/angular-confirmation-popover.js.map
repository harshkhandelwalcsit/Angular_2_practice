{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b2e29f08accdea79b3e6","webpack:///external {\"root\":[\"ng\",\"core\"],\"commonjs\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"amd\":\"@angular/core\"}","webpack:///./src/confirmationPopoverOptions.provider.ts","webpack:///./src/confirmationPopoverWindow.component.ts","webpack:///./~/positioning/dist/positioning.js","webpack:///./src/confirmationPopover.module.ts","webpack:///./src/confirmationPopover.directive.ts","webpack:///./src/focus.directive.ts","webpack:///./src/index.ts","webpack:///external {\"root\":[\"ng\",\"common\"],\"commonjs\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"amd\":\"@angular/common\"}","webpack:///external {\"root\":[\"ng\",\"platformBrowser\"],\"commonjs\":\"@angular/platform-browser\",\"commonjs2\":\"@angular/platform-browser\",\"amd\":\"@angular/platform-browser\"}"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,+C;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,oCAAsD;AAkEtD;IAAA;QAIE,gBAAW,GAAW,SAAS,CAAC;QAChC,eAAU,GAAW,QAAQ,CAAC;QAC9B,sBAAiB,GAAW,SAAS,CAAC;QACtC,qBAAgB,GAAW,SAAS,CAAC;QACrC,cAAS,GAAW,KAAK,CAAC;QAE1B,sBAAiB,GAAY,KAAK,CAAC;QACnC,qBAAgB,GAAY,KAAK,CAAC;QAClC,iBAAY,GAAW,EAAE,CAAC;QAC1B,iBAAY,GAAY,KAAK,CAAC;IAEhC,CAAC;IAAD,iCAAC;AAAD,CAAC;AAfY,gEAA0B;AAiBvC;;GAEG;AAEH,IAAa,gCAAgC;IAAS,oDAA0B;IAAhF;;IAOA,CAAC;IAAD,uCAAC;AAAD,CAAC,CAPqD,0BAA0B,GAO/E;AAPY,gCAAgC;IAD5C,iBAAU,EAAE;GACA,gCAAgC,CAO5C;AAPY,4EAAgC;;;;;;;;;;;;;;;;;;;ACvF7C,oCAGuB;AACvB,mEAAuF;AAEvF;;GAEG;AA+CH,IAAa,yBAAyB;IAEpC,mCAAmB,OAAyC;QAAzC,YAAO,GAAP,OAAO,CAAkC;IAAG,CAAC;IAEhE,mDAAe,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;IACjC,CAAC;IAEH,gCAAC;AAAD,CAAC;AARY,yBAAyB;IA9CrC,gBAAS,CAAC;QACT,MAAM,EAAE,CAAC,oDAIR,CAAC;QACF,QAAQ,EAAE,msDAsCT;KACF,CAAC;qCAG4B,sEAAgC;GAFjD,yBAAyB,CAQrC;AARY,8DAAyB;;;;;;;;;;ACvDtC;AAAA;AACA;AACA;AACA;AACA;AACA,+DAA+D,+CAA+C;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;;;ACpIA,oCAA4E;AAC5E,sCAA6C;AAC7C,2CAAwC;AACxC,6DAAoE;AACpE,mEAAgF;AAChF,+CAAwC;AACxC,mEAAsH;AAEzG,oBAAY,GAA2B,IAAI,qBAAc,CAAC,mCAAmC,CAAC,CAAC;AAE5G,wBAA+B,WAAuC;IACpE,IAAM,OAAO,GAA+B,IAAI,gEAA0B,EAAE,CAAC;IAC7E,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACpC,MAAM,CAAC,OAAO,CAAC;AACjB,CAAC;AAJD,wCAIC;AAQD,IAAa,yBAAyB;IAAtC;IAkBA,CAAC;IAhBQ,iCAAO,GAAd,UAAe,OAAiD;QAAjD,sCAAiD;QAE9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","file":"angular-confirmation-popover.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/common\"), require(\"@angular/platform-browser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/common\", \"@angular/platform-browser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularConfirmationPopover\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"), require(\"@angular/platform-browser\"));\n\telse\n\t\troot[\"angularConfirmationPopover\"] = factory(root[\"ng\"][\"core\"], root[\"ng\"][\"common\"], root[\"ng\"][\"platformBrowser\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b2e29f08accdea79b3e6","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":[\"ng\",\"core\"],\"commonjs\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"amd\":\"@angular/core\"}\n// module id = 0\n// module chunks = 0","import {TemplateRef, Injectable} from '@angular/core';\n\nexport interface ConfirmationPopoverOptionsInterface {\n\n  /**\n   * The popover title\n   */\n  title?: string;\n\n  /**\n   * The popover message\n   */\n  message?: string;\n\n  /**\n   * The popover confirmation button text\n   */\n  confirmText?: string;\n\n  /**\n   * The popover cancel button text\n   */\n  cancelText?: string;\n\n  /**\n   * The popover confirm button type e.g. `success`, `danger` etc\n   */\n  confirmButtonType?: string;\n\n  /**\n   * The popover cancel button type  e.g. `success`, `danger` etc\n   */\n  cancelButtonType?: string;\n\n  /**\n   * The popover placement. Can be `top`, `bottom`, `left`, `right`\n   */\n  placement?: string;\n\n  /**\n   * Which button to cancel. Can be either `confirm` or `cancel`\n   */\n  focusButton?: string;\n\n  /**\n   * Whether to hide the confirmation button\n   */\n  hideConfirmButton?: boolean;\n\n  /**\n   * Whether to hide the cancel button\n   */\n  hideCancelButton?: boolean;\n\n  /**\n   * A custom CSS class to be added to the popover\n   */\n  popoverClass?: string;\n\n  /**\n   * Whether to append the popover to the document body\n   */\n  appendToBody?: boolean;\n\n}\n\nexport class ConfirmationPopoverOptions implements ConfirmationPopoverOptionsInterface {\n\n  title: string;\n  message: string;\n  confirmText: string = 'Confirm';\n  cancelText: string = 'Cancel';\n  confirmButtonType: string = 'success';\n  cancelButtonType: string = 'default';\n  placement: string = 'top';\n  focusButton: string;\n  hideConfirmButton: boolean = false;\n  hideCancelButton: boolean = false;\n  popoverClass: string = '';\n  appendToBody: boolean = false;\n\n}\n\n/**\n * @private\n */\n@Injectable()\nexport class ConfirmationPopoverWindowOptions extends ConfirmationPopoverOptions {\n\n  public onConfirm: Function;\n  public onCancel: Function;\n  public onAfterViewInit: Function;\n  public customTemplate: TemplateRef<any>;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/confirmationPopoverOptions.provider.ts","import {\n  Component,\n  AfterViewInit,\n} from '@angular/core';\nimport {ConfirmationPopoverWindowOptions} from './confirmationPopoverOptions.provider';\n\n/**\n * @private\n */\n@Component({\n  styles: [`\n    .popover {\n      display: block;\n    }\n  `],\n  template: `\n    <ng-template #defaultTemplate let-options=\"options\">\n      <div [class]=\"'popover ' + options.placement + ' popover-' + options.placement + ' ' + options.popoverClass\">\n        <div class=\"popover-arrow arrow\"></div>\n        <h3 class=\"popover-title\" [innerHTML]=\"options.title\"></h3>\n        <div class=\"popover-content\">\n          <p [innerHTML]=\"options.message\"></p>\n          <div class=\"row\">\n            <div\n              class=\"col-xs-6 col-6\"\n              [ngClass]=\"{'col-xs-offset-3 col-offset-3': options.hideCancelButton}\"\n              *ngIf=\"!options.hideConfirmButton\">\n              <button\n                [mwlFocus]=\"options.focusButton === 'confirm'\"\n                [class]=\"'btn btn-block btn-' + options.confirmButtonType\"\n                (click)=\"options.onConfirm({clickEvent: $event})\"\n                [innerHtml]=\"options.confirmText\">\n              </button>\n            </div>\n            <div\n              class=\"col-xs-6 col-6\"\n              [ngClass]=\"{'col-xs-offset-3 col-offset-3': options.hideConfirmButton}\"\n              *ngIf=\"!options.hideCancelButton\">\n              <button\n                [mwlFocus]=\"options.focusButton === 'cancel'\"\n                [class]=\"'btn btn-block btn-' + options.cancelButtonType\"\n                (click)=\"options.onCancel({clickEvent: $event})\"\n                [innerHtml]=\"options.cancelText\">\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"options.customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{options: options}\">\n    </ng-template>\n  `\n})\nexport class ConfirmationPopoverWindow implements AfterViewInit {\n\n  constructor(public options: ConfirmationPopoverWindowOptions) {}\n\n  ngAfterViewInit(): void {\n    this.options.onAfterViewInit();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/confirmationPopoverWindow.component.ts","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport var Positioning = (function () {\n    function Positioning() {\n    }\n    Positioning.prototype.getStyle = function (element, prop) { return window.getComputedStyle(element)[prop]; };\n    Positioning.prototype.isStaticPositioned = function (element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    };\n    Positioning.prototype.offsetParent = function (element) {\n        var offsetParentEl = element.offsetParent || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = offsetParentEl.offsetParent;\n        }\n        return offsetParentEl || document.documentElement;\n    };\n    Positioning.prototype.position = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elPosition;\n        var parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n        }\n        else {\n            var offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    };\n    Positioning.prototype.offset = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elBcr = element.getBoundingClientRect();\n        var viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        var elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    };\n    Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\n        var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        var shiftWidth = {\n            left: hostElPosition.left,\n            center: hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2,\n            right: hostElPosition.left + hostElPosition.width\n        };\n        var shiftHeight = {\n            top: hostElPosition.top,\n            center: hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2,\n            bottom: hostElPosition.top + hostElPosition.height\n        };\n        var targetElBCR = targetElement.getBoundingClientRect();\n        var placementPrimary = placement.split('-')[0] || 'top';\n        var placementSecondary = placement.split('-')[1] || 'center';\n        var targetElPosition = {\n            height: targetElBCR.height || targetElement.offsetHeight,\n            width: targetElBCR.width || targetElement.offsetWidth,\n            top: 0,\n            bottom: targetElBCR.height || targetElement.offsetHeight,\n            left: 0,\n            right: targetElBCR.width || targetElement.offsetWidth\n        };\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.top = hostElPosition.top - targetElement.offsetHeight;\n                targetElPosition.bottom += hostElPosition.top - targetElement.offsetHeight;\n                targetElPosition.left = shiftWidth[placementSecondary];\n                targetElPosition.right += shiftWidth[placementSecondary];\n                break;\n            case 'bottom':\n                targetElPosition.top = shiftHeight[placementPrimary];\n                targetElPosition.bottom += shiftHeight[placementPrimary];\n                targetElPosition.left = shiftWidth[placementSecondary];\n                targetElPosition.right += shiftWidth[placementSecondary];\n                break;\n            case 'left':\n                targetElPosition.top = shiftHeight[placementSecondary];\n                targetElPosition.bottom += shiftHeight[placementSecondary];\n                targetElPosition.left = hostElPosition.left - targetElement.offsetWidth;\n                targetElPosition.right += hostElPosition.left - targetElement.offsetWidth;\n                break;\n            case 'right':\n                targetElPosition.top = shiftHeight[placementSecondary];\n                targetElPosition.bottom += shiftHeight[placementSecondary];\n                targetElPosition.left = shiftWidth[placementPrimary];\n                targetElPosition.right += shiftWidth[placementPrimary];\n                break;\n        }\n        targetElPosition.top = Math.round(targetElPosition.top);\n        targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        targetElPosition.left = Math.round(targetElPosition.left);\n        targetElPosition.right = Math.round(targetElPosition.right);\n        return targetElPosition;\n    };\n    return Positioning;\n}());\nvar positionService = new Positioning();\nexport function positionElements(hostElement, targetElement, placement, appendToBody) {\n    var pos = positionService.positionElements(hostElement, targetElement, placement, appendToBody);\n    targetElement.style.top = pos.top + \"px\";\n    targetElement.style.left = pos.left + \"px\";\n}\n//# sourceMappingURL=positioning.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/positioning/dist/positioning.js\n// module id = 3\n// module chunks = 0","import {NgModule, ModuleWithProviders, InjectionToken} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Positioning} from 'positioning';\nimport {ConfirmationPopover} from './confirmationPopover.directive';\nimport {ConfirmationPopoverWindow} from './confirmationPopoverWindow.component';\nimport {Focus} from './focus.directive';\nimport {ConfirmationPopoverOptions, ConfirmationPopoverOptionsInterface} from './confirmationPopoverOptions.provider';\n\nexport const USER_OPTIONS: InjectionToken<string> = new InjectionToken('confirmation popover user options');\n\nexport function optionsFactory(userOptions: ConfirmationPopoverOptions): ConfirmationPopoverOptions {\n  const options: ConfirmationPopoverOptions = new ConfirmationPopoverOptions();\n  Object.assign(options, userOptions);\n  return options;\n}\n\n@NgModule({\n  declarations: [ConfirmationPopover, ConfirmationPopoverWindow, Focus],\n  imports: [CommonModule],\n  exports: [ConfirmationPopover, Focus],\n  entryComponents: [ConfirmationPopoverWindow]\n})\nexport class ConfirmationPopoverModule {\n\n  static forRoot(options: ConfirmationPopoverOptionsInterface = {}): ModuleWithProviders {\n\n    return {\n      ngModule: ConfirmationPopoverModule,\n      providers: [{\n        provide: USER_OPTIONS,\n        useValue: options\n      }, {\n        provide: ConfirmationPopoverOptions,\n        useFactory: optionsFactory,\n        deps: [USER_OPTIONS]\n      }, Positioning]\n    };\n\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/confirmationPopover.module.ts","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewContainerRef,\n  ComponentRef,\n  OnDestroy,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  ReflectiveInjector,\n  ResolvedReflectiveProvider,\n  ComponentFactoryResolver,\n  Injector,\n  Inject,\n  Renderer2,\n  TemplateRef,\n  ComponentFactory\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {ConfirmationPopoverWindow} from './confirmationPopoverWindow.component';\nimport {ConfirmationPopoverOptions, ConfirmationPopoverWindowOptions} from './confirmationPopoverOptions.provider';\nimport {Positioning} from 'positioning';\n\n/**\n * @private\n */\ninterface Coords {\n  top: number;\n  left: number;\n}\n\n/**\n * @private\n */\nexport interface ConfirmCancelEvent {\n  clickEvent: MouseEvent;\n}\n\n/**\n * All properties can be set on the directive as attributes like so (use `ConfirmationPopoverModule.forRoot()` to configure them globally):\n * ```html\n * &lt;button\n *  class=\"btn btn-default\"\n *  mwlConfirmationPopover\n *  [title]=\"title\"\n *  [message]=\"message\"\n *  placement=\"left\"\n *  (confirm)=\"confirmClicked = true\"\n *  (cancel)=\"cancelClicked = true\"\n *  [(isOpen)]=\"isOpen\"&gt;\n *   Show confirm popover!\n * &lt;/button&gt;\n * ```\n */\n@Directive({\n  selector: '[mwlConfirmationPopover]'\n})\nexport class ConfirmationPopover implements OnDestroy, OnChanges, OnInit {\n\n  /**\n   * The title of the popover.\n   * Note, if you use an expression, you may want to consider using \"data-title\" instead of \"title\" so\n   * that the browser doesn't show native tooltips with the angular expression listed.\n   */\n  @Input() title: string;\n\n  /**\n   * The body text of the popover.\n   */\n  @Input() message: string;\n\n  /**\n   * The text of the confirm button. Default `Confirm`\n   */\n  @Input() confirmText: string;\n\n  /**\n   * The text of the cancel button. Default `Cancel`\n   */\n  @Input() cancelText: string;\n\n  /**\n   * The placement of the popover. It can be either `top`, `right`, `bottom` or `left`. Default `top`\n   */\n  @Input() placement: string;\n\n  /**\n   * The bootstrap button type of the confirm button. It can be any supported bootstrap color type\n   * e.g. `default`, `warning`, `danger` etc. Default `success`\n   */\n  @Input() confirmButtonType: string;\n\n  /**\n   * The bootstrap button type of the cancel button. It can be any supported bootstrap color type\n   * e.g. `default`, `warning`, `danger` etc. Default `default`\n   */\n  @Input() cancelButtonType: string;\n\n  /**\n   * Set to either `confirm` or `cancel` to focus the confirm or cancel button.\n   * If omitted, by default it will not focus either button.\n   */\n  @Input() focusButton: string;\n\n  /**\n   * Whether to hide the confirm button. Default `false`.\n   */\n  @Input() hideConfirmButton: boolean;\n\n  /**\n   * Whether to hide the cancel button. Default `false`.\n   */\n  @Input() hideCancelButton: boolean;\n\n  /**\n   * Whether to disable showing the popover. Default `false`.\n   */\n  @Input() isDisabled: boolean = false;\n\n  /**\n   * Will open or show the popover when changed.\n   * Can be sugared with `isOpenChange` to emulate 2-way binding like so `[(isOpen)]=\"isOpen\"`\n   */\n  @Input() isOpen: boolean = false;\n\n  /**\n   * A reference to a &lt;template&gt; tag that if set will override the popovers template. Use like so:\n   * ```html\n   * &lt;ng-template #customTemplate let-options=\"options\"&gt;\n   *   &lt;div [class]=\"'popover ' + options.placement\" style=\"display: block\"&gt;\n   *     My custom template\n   *   &lt;/div&gt;\n   * &lt;/ng-template&gt;\n   * ```\n   *\n   * Then pass customTemplate to the mwlConfirmationPopover directive like so `[customTemplate]=\"customTemplate\"`\n   */\n  @Input() customTemplate: TemplateRef<any>;\n\n  /**\n   * Will emit when the popover is opened or closed\n   */\n  @Output() isOpenChange: EventEmitter<boolean> = new EventEmitter(true);\n\n  /**\n   * An expression that is called when the confirm button is clicked.\n   */\n  @Output() confirm: EventEmitter<ConfirmCancelEvent> = new EventEmitter();\n\n  /**\n   * An expression that is called when the cancel button is clicked.\n   */\n  @Output() cancel: EventEmitter<ConfirmCancelEvent> = new EventEmitter();\n\n  /**\n   * A custom CSS class to be added to the popover\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * Append the element to the document body rather than the trigger element\n   */\n  @Input() appendToBody: boolean;\n\n  /**\n   * @private\n   */\n  popover: ComponentRef<ConfirmationPopoverWindow> = null;\n\n  /**\n   * @private\n   */\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private elm: ElementRef,\n    private defaultOptions: ConfirmationPopoverOptions,\n    private cfr: ComponentFactoryResolver,\n    private position: Positioning,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document //tslint:disable-line\n  ) {}\n\n  /**\n   * @private\n   */\n  ngOnInit(): void {\n    this.isOpenChange.emit(false);\n  }\n\n  /**\n   * @private\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.isOpen) {\n      if (changes.isOpen.currentValue === true) {\n        this.showPopover();\n      } else {\n        this.hidePopover();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  ngOnDestroy(): void {\n    this.hidePopover();\n  }\n\n  /**\n   * @private\n   */\n  onConfirm(event: ConfirmCancelEvent): void {\n    this.confirm.emit(event);\n    this.hidePopover();\n  }\n\n  /**\n   * @private\n   */\n  onCancel(event: ConfirmCancelEvent): void {\n    this.cancel.emit(event);\n    this.hidePopover();\n  }\n\n  /**\n   * @private\n   */\n  @HostListener('document:click', ['$event.target'])\n  @HostListener('document:touchend', ['$event.target'])\n  onDocumentClick(target: HTMLElement): void {\n\n    if (this.popover && !this.elm.nativeElement.contains(target) && !this.popover.location.nativeElement.contains(target)) {\n      this.hidePopover();\n    }\n  }\n\n  /**\n   * @private\n   */\n  @HostListener('click')\n  togglePopover(): void {\n    if (!this.popover) {\n      this.showPopover();\n    } else {\n      this.hidePopover();\n    }\n  }\n\n  /**\n   * @private\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.positionPopover();\n  }\n\n  private showPopover(): void {\n    if (!this.popover && !this.isDisabled) {\n\n      const options: ConfirmationPopoverWindowOptions = new ConfirmationPopoverWindowOptions();\n      Object.assign(options, this.defaultOptions, {\n        title: this.title,\n        message: this.message,\n        onConfirm: (event: ConfirmCancelEvent): void => {\n          this.onConfirm(event);\n        },\n        onCancel: (event: ConfirmCancelEvent): void => {\n          this.onCancel(event);\n        },\n        onAfterViewInit: () : void => {\n          this.positionPopover();\n        }\n      });\n\n      const optionalParams: string[] = [\n        'confirmText',\n        'cancelText',\n        'placement',\n        'confirmButtonType',\n        'cancelButtonType',\n        'focusButton',\n        'hideConfirmButton',\n        'hideCancelButton',\n        'popoverClass',\n        'appendToBody',\n        'customTemplate'\n      ];\n      optionalParams.forEach(param => {\n        if (typeof this[param] !== 'undefined') {\n          options[param] = this[param];\n        }\n      });\n\n      const componentFactory: ComponentFactory<ConfirmationPopoverWindow> = this.cfr.resolveComponentFactory(ConfirmationPopoverWindow);\n      const binding: ResolvedReflectiveProvider[] = ReflectiveInjector.resolve([{\n        provide: ConfirmationPopoverWindowOptions,\n        useValue: options\n      }]);\n      const contextInjector: Injector = this.viewContainerRef.parentInjector;\n      const childInjector: Injector = ReflectiveInjector.fromResolvedProviders(binding, contextInjector);\n      this.popover = this.viewContainerRef.createComponent(componentFactory, this.viewContainerRef.length, childInjector);\n      if (options.appendToBody) {\n        this.document.body.appendChild(this.popover.location.nativeElement);\n      }\n      this.isOpenChange.emit(true);\n\n    }\n  }\n\n  private positionPopover(): void {\n    if (this.popover) {\n      const popoverElement: HTMLElement = this.popover.location.nativeElement.children[0];\n      const popoverPosition: Coords = this.position.positionElements(\n        this.elm.nativeElement,\n        popoverElement,\n        this.placement || this.defaultOptions.placement,\n        this.appendToBody || this.defaultOptions.appendToBody\n      );\n      this.renderer.setStyle(popoverElement, 'top', `${popoverPosition.top}px`);\n      this.renderer.setStyle(popoverElement, 'left', `${popoverPosition.left}px`);\n    }\n  }\n\n  private hidePopover(): void {\n    if (this.popover) {\n      this.popover.destroy();\n      this.popover = null;\n      this.isOpenChange.emit(false);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/confirmationPopover.directive.ts","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer,\n  SimpleChanges\n} from '@angular/core';\n\n/**\n * A helper directive to focus buttons. You will only need this if using a custom template\n */\n@Directive({\n  selector: '[mwlFocus]'\n})\nexport class Focus implements OnChanges {\n\n  @Input() mwlFocus: boolean;\n\n  constructor(private elm: ElementRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.mwlFocus && this.mwlFocus === true) {\n      this.elm.nativeElement.focus();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/focus.directive.ts","export {ConfirmationPopoverModule} from './confirmationPopover.module';\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/index.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":[\"ng\",\"common\"],\"commonjs\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"amd\":\"@angular/common\"}\n// module id = 8\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":[\"ng\",\"platformBrowser\"],\"commonjs\":\"@angular/platform-browser\",\"commonjs2\":\"@angular/platform-browser\",\"amd\":\"@angular/platform-browser\"}\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}