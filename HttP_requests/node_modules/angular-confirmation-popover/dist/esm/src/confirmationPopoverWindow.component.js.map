{"version":3,"sources":["../../../src/confirmationPopoverWindow.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,GAEV,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAA,gCAAE,EAAgC,MAAM,uCAAA,CAAwC;AAEvF;;GAEG;AAEH;IAEE,mCAAmB,OAAyC;QAAzC,YAAO,GAAP,OAAO,CAAkC;IAAG,CAAC;IAEhE,mDAAe,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;IACjC,CAAC;IAsDH,gCAAC;AAAD,CA5DA,AA4DC;;AApDM,oCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,MAAM,EAAE,CAAC,oDAIR,CAAC;gBACF,QAAQ,EAAE,msDAsCT;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,wCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,gCAAgC,GAAG;CACzC,EAF6F,CAE7F,CAAC","file":"confirmationPopoverWindow.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  AfterViewInit,\n} from '@angular/core';\nimport {ConfirmationPopoverWindowOptions} from './confirmationPopoverOptions.provider';\n\n/**\n * @private\n */\n\nexport class ConfirmationPopoverWindow implements AfterViewInit {\n\n  constructor(public options: ConfirmationPopoverWindowOptions) {}\n\n  ngAfterViewInit(): void {\n    this.options.onAfterViewInit();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  styles: [`\n    .popover {\n      display: block;\n    }\n  `],\n  template: `\n    <ng-template #defaultTemplate let-options=\"options\">\n      <div [class]=\"'popover ' + options.placement + ' popover-' + options.placement + ' ' + options.popoverClass\">\n        <div class=\"popover-arrow arrow\"></div>\n        <h3 class=\"popover-title\" [innerHTML]=\"options.title\"></h3>\n        <div class=\"popover-content\">\n          <p [innerHTML]=\"options.message\"></p>\n          <div class=\"row\">\n            <div\n              class=\"col-xs-6 col-6\"\n              [ngClass]=\"{'col-xs-offset-3 col-offset-3': options.hideCancelButton}\"\n              *ngIf=\"!options.hideConfirmButton\">\n              <button\n                [mwlFocus]=\"options.focusButton === 'confirm'\"\n                [class]=\"'btn btn-block btn-' + options.confirmButtonType\"\n                (click)=\"options.onConfirm({clickEvent: $event})\"\n                [innerHtml]=\"options.confirmText\">\n              </button>\n            </div>\n            <div\n              class=\"col-xs-6 col-6\"\n              [ngClass]=\"{'col-xs-offset-3 col-offset-3': options.hideConfirmButton}\"\n              *ngIf=\"!options.hideCancelButton\">\n              <button\n                [mwlFocus]=\"options.focusButton === 'cancel'\"\n                [class]=\"'btn btn-block btn-' + options.cancelButtonType\"\n                (click)=\"options.onCancel({clickEvent: $event})\"\n                [innerHtml]=\"options.cancelText\">\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"options.customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{options: options}\">\n    </ng-template>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ConfirmationPopoverWindowOptions, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}