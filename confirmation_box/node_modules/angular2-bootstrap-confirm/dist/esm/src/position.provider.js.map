{"version":3,"file":"position.provider.js","sourceRoot":"","sources":["../../../src/position.provider.ts"],"names":[],"mappings":"OAAO,EAAC,UAAU,EAAC,MAAM,eAAe;AAExC;;;;;;;;;;;;;;;;GAgBG;AAEH;IAEE;QACE,MAAM,IAAI,KAAK,CAAC,sFAAsF,CAAC,CAAC;IAC1G,CAAC;IAII,mBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,uBAAc,GAA6D,EACjF,CAAC;IACF,eAAC;AAAD,CAAC,AAdD,IAcC","sourcesContent":["import {Injectable} from '@angular/core';\n\n/**\n * A placeholder token that you need to overwrite with the actual Position service\n *\n * ```\n *  // if not also using the @ng-bootstrap/ng-bootstrap module\n * import {Positioning} from 'angular2-bootstrap-confirm/position';\n *  // if already using the @ng-bootstrap/ng-bootstrap module\n * import {Positioning} from '@ng-bootstrap/ng-bootstrap/util/positioning';\n * import {Position} from 'angular2-bootstrap-confirm';\n *\n * providers: [\n *   provide(Position, {\n *     useClass: Positioning\n *   })\n * ]\n * ```\n */\n\nexport abstract class Position {\n\n  constructor() {\n    throw new Error('You must provide a service that implements the Position when bootstrapping your app.');\n  }\n\n  abstract positionElements(hostEl: any, targetEl: any, positionStr: any, appendToBody: any): any\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}