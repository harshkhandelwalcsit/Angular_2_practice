{"version":3,"file":"confirmOptions.provider.js","sourceRoot":"","sources":["../../../src/confirmOptions.provider.ts"],"names":[],"mappings":";;;;;OAAO,EAAC,UAAU,EAAc,MAAM,eAAe;AAErD;;;;;;;;;;;GAWG;AAEH;IAAA;QAYE;;WAEG;QACI,gBAAW,GAAW,SAAS,CAAC;QAEvC;;WAEG;QACI,eAAU,GAAW,QAAQ,CAAC;QAErC;;WAEG;QACI,sBAAiB,GAAW,SAAS,CAAC;QAE7C;;WAEG;QACI,qBAAgB,GAAW,SAAS,CAAC;QAE5C;;WAEG;QACI,cAAS,GAAW,KAAK,CAAC;QAOjC;;WAEG;QACI,sBAAiB,GAAY,KAAK,CAAC;QAE1C;;WAEG;QACI,qBAAgB,GAAY,KAAK,CAAC;QAEzC;;WAEG;QACI,iBAAY,GAAW,EAAE,CAAC;QAEjC;;WAEG;QACI,iBAAY,GAAY,KAAK,CAAC;IAQvC,CAAC;IANM,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,6BAAc,GAA6D,EACjF,CAAC;IACF,qBAAC;AAAD,CAAC,AApED,IAoEC;AAED;;GAEG;AAEH;IAA2C,yCAAc;IAAzD;QAA2C,8BAAc;IAazD,CAAC;IANM,gCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,oCAAc,GAA6D,EACjF,CAAC;IACF,4BAAC;AAAD,CAAC,AAbD,CAA2C,cAAc,GAaxD","sourcesContent":["import {Injectable, TemplateRef} from '@angular/core';\n\n/**\n * Use this for configuring the confirmation popover defaults\n *\n * Use it like so:\n * ```\n * const options: ConfirmOptions = new ConfirmOptions();\n * // focus the confirm button by default. See below for an explanation of all options.\n * options.focusButton = 'confirm';\n *\n * providers: [{provide: ConfirmOptions, useValue: options}]\n * ```\n */\n\nexport class ConfirmOptions {\n\n  /**\n   * The popover title\n   */\n  public title: string;\n\n  /**\n   * The popover message\n   */\n  public message: string;\n\n  /**\n   * The popover confirmation button text\n   */\n  public confirmText: string = 'Confirm';\n\n  /**\n   * The popover cancel button text\n   */\n  public cancelText: string = 'Cancel';\n\n  /**\n   * The popover confirm button type e.g. `success`, `danger` etc\n   */\n  public confirmButtonType: string = 'success';\n\n  /**\n   * The popover cancel button type  e.g. `success`, `danger` etc\n   */\n  public cancelButtonType: string = 'default';\n\n  /**\n   * The popover placement. Can be `top`, `bottom`, `left`, `right`\n   */\n  public placement: string = 'top';\n\n  /**\n   * Which button to cancel. Can be either `confirm` or `cancel`\n   */\n  public focusButton: string;\n\n  /**\n   * Whether to hide the confirmation button\n   */\n  public hideConfirmButton: boolean = false;\n\n  /**\n   * Whether to hide the cancel button\n   */\n  public hideCancelButton: boolean = false;\n\n  /**\n   * A custom CSS class to be added to the popover\n   */\n  public popoverClass: string = '';\n\n  /**\n   * Whether to append the popover to the document body\n   */\n  public appendToBody: boolean = false;\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\n/**\n * @private\n */\n\nexport class PopoverConfirmOptions extends ConfirmOptions {\n\n  public onConfirm: Function;\n  public onCancel: Function;\n  public onAfterViewInit: Function;\n  public customTemplate: TemplateRef<any>;\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}